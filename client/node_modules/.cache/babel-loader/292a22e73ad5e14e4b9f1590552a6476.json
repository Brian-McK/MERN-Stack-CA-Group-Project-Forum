{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars_env_full\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      axios.defaults.withCredentials = true; // needed for sessions to work\n\n      axios.post(\"\".concat(SERVER_HOST, \"/users/register/\").concat(this.state.name, \"/\").concat(this.state.email, \"/\").concat(this.state.password, \"}\")).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else // user successfully registered\n            {\n              console.log(\"User registered and logged in\");\n              sessionStorage.isLoggedIn = \"true\";\n              sessionStorage.name = res.data.name;\n              sessionStorage.accessLevel = res.data.accessLevel;\n              this.setState({\n                isRegistered: true\n              });\n            }\n        } else {\n          console.log(\"Registration failed\");\n        }\n      });\n    };\n\n    this.resetUserCollection = () => {\n      axios.defaults.withCredentials = true; // needed for sessions to work\n\n      axios.post(\"\".concat(SERVER_HOST, \"/users/reset_user_collection\")).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else // user successfully reset the User collection\n            {\n              console.log(\"User collection reset\");\n            }\n        } else {\n          console.log(\"Failed to reset User collection\");\n        }\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      isRegistered: false\n    };\n    console.log(1);\n  }\n\n  validateName() {\n    // valid name pattern\n    return this.state.name.length > 1;\n  }\n\n  validateEmail() {\n    // valid email pattern\n    const pattern = /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return pattern.test(String(this.state.email).toLowerCase());\n  }\n\n  validatePassword() {\n    const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\n    return pattern.test(String(this.state.password));\n  }\n\n  validateConfirmPassword() {\n    return this.state.confirmPassword.length > 0 && this.state.password === this.state.confirmPassword;\n  }\n\n  validate() {\n    return {\n      name: this.validateName(),\n      email: this.validateEmail(),\n      password: this.validatePassword(),\n      confirmPassword: this.validateConfirmPassword()\n    };\n  }\n\n  render() {\n    const checkMark = \"✔\";\n    const formInputsState = this.validate();\n    const inputsAreAllValid = Object.keys(formInputsState).every(index => formInputsState[index]);\n    let nameErrorMessage = \"\";\n    let emailErrorMessage = \"\";\n    let passwordErrorMessage = \"\";\n    let confirmPasswordErrorMessage = \"\";\n\n    if (!this.validateName()) {\n      nameErrorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Name must be at least two characters long\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }));\n    }\n\n    if (!this.validateEmail()) {\n      emailErrorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Enter a valid email\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }));\n    }\n\n    if (!this.validatePassword()) {\n      let errorMessages = [];\n\n      if (this.state.password.length < 10) {\n        errorMessages.push(\"Password must be at least ten characters long.\");\n      }\n\n      if (!this.state.password.match(/[0-9]/)) {\n        errorMessages.push(\"Password must contain at least one digit (0-9).\");\n      }\n\n      if (!this.state.password.match(/[a-z]/)) {\n        errorMessages.push(\"Password must contain at least one lowercase character.\");\n      }\n\n      if (!this.state.password.match(/[A-Z]/)) {\n        errorMessages.push(\"Password must contain at least one uppercase character.{'\\n''}\");\n      }\n\n      if (!this.state.password.match(/[£!#€$%^&*]/)) {\n        errorMessages.push(\"Password must contain at least one of the characters £!#€$%^&*\");\n      }\n\n      passwordErrorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, errorMessages.map(errorMessage => React.createElement(\"li\", {\n        key: errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \" \", errorMessage, \" \"))));\n    }\n\n    if (!this.validateConfirmPassword()) {\n      confirmPasswordErrorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Passwords must match\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"form\", {\n      className: \"form-container\",\n      noValidate: true,\n      autoComplete: false,\n      id: \"loginForm\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.isRegistered ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }) : null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"New User Registration\"), React.createElement(\"div\", {\n      id: \"nameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validateName() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, checkMark)), nameErrorMessage, React.createElement(\"div\", {\n      id: \"emailContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validateEmail() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, checkMark)), emailErrorMessage, React.createElement(\"div\", {\n      id: \"passwordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      title: \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (\\xA3!#\\u20AC$%^&*)\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validatePassword() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, checkMark)), passwordErrorMessage, React.createElement(\"div\", {\n      id: \"passwordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validateConfirmPassword() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, checkMark)), confirmPasswordErrorMessage, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Register\",\n      disabled: !inputsAreAllValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"\\\"Reset User Database\\\" is only for testing purposes.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), \"All code on the client-side and server-side relating to resetting the database should be removed from any development release\"), React.createElement(LinkInClass, {\n      value: \"Reset User Database\",\n      className: \"red-button\",\n      onClick: this.resetUserCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Reset the database and set up an administrator with:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), \" * email \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"admin@admin.com\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), \" * password \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"123!\\\"\\xA3qweQWE\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\cars_env_full\\client\\src\\components\\Register.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","SERVER_HOST","Register","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","defaults","withCredentials","post","state","email","password","then","res","data","errorMessage","console","log","sessionStorage","isLoggedIn","accessLevel","isRegistered","resetUserCollection","confirmPassword","validateName","length","validateEmail","pattern","test","String","toLowerCase","validatePassword","validateConfirmPassword","validate","render","checkMark","formInputsState","inputsAreAllValid","Object","keys","every","index","nameErrorMessage","emailErrorMessage","passwordErrorMessage","confirmPasswordErrorMessage","errorMessages","push","match","map","input","inputToFocus"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class Register extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            name:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",    \n            isRegistered:false\n        } \n        \n        console.log(1)\n    }\n    \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        axios.defaults.withCredentials = true // needed for sessions to work\n        axios.post(`${SERVER_HOST}/users/register/${this.state.name}/${this.state.email}/${this.state.password}}`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully registered\n                { \n                    console.log(\"User registered and logged in\")\n                    \n                    sessionStorage.isLoggedIn = \"true\"\n                    sessionStorage.name = res.data.name\n                    sessionStorage.accessLevel = res.data.accessLevel\n                    \n                    this.setState({isRegistered:true})\n                }        \n            }\n            else\n            {\n                console.log(\"Registration failed\")\n            }\n        })   \n    }\n    \n    \n    resetUserCollection = () =>\n    {\n        axios.defaults.withCredentials = true // needed for sessions to work\n        axios.post(`${SERVER_HOST}/users/reset_user_collection`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully reset the User collection\n                { \n                    console.log(\"User collection reset\")\n                }        \n            }\n            else\n            {\n                console.log(\"Failed to reset User collection\")\n            }\n        })   \n    }\n\n\n    validateName()\n    {    \n        // valid name pattern\n        return (this.state.name.length > 1)\n    }\n    \n    \n    validateEmail()\n    {    \n        // valid email pattern\n        const pattern = /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        return pattern.test(String(this.state.email).toLowerCase())\n    }\n\n\n    validatePassword()\n    {    \n        const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/\n        return pattern.test(String(this.state.password)) \n    }\n\n\n    validateConfirmPassword()\n    {    \n        return ((this.state.confirmPassword.length > 0) && (this.state.password === this.state.confirmPassword)) \n    }\n\n\n    validate() \n    {\n        return {\n            name: this.validateName(),\n            email: this.validateEmail(),\n            password: this.validatePassword(),\n            confirmPassword: this.validateConfirmPassword()\n        }\n    }\n\n\n    render() \n    {\n        \n        const checkMark = \"✔\"\n        const formInputsState = this.validate()\n        const inputsAreAllValid = Object.keys(formInputsState).every(index => formInputsState[index])          \n            \n        let nameErrorMessage = \"\";\n        let emailErrorMessage = \"\";\n        let passwordErrorMessage = \"\";\n        let confirmPasswordErrorMessage = \"\";\n\n        if(!this.validateName())\n        {\n            nameErrorMessage = <div className=\"error\">Name must be at least two characters long<br/></div>;\n        }\n        \n        if(!this.validateEmail())\n        {\n            emailErrorMessage = <div className=\"error\">Enter a valid email<br/></div>;\n        }\n        \n        if(!this.validatePassword())\n        {\n            let errorMessages = [];\n            if(this.state.password.length < 10)\n            {\n                errorMessages.push(\"Password must be at least ten characters long.\");\n            } \n            if(!this.state.password.match(/[0-9]/))\n            {\n                errorMessages.push(\"Password must contain at least one digit (0-9).\");\n            }\n            if(!this.state.password.match(/[a-z]/))\n            {\n                errorMessages.push(\"Password must contain at least one lowercase character.\");\n            }\n            if(!this.state.password.match(/[A-Z]/))\n            {\n                errorMessages.push(\"Password must contain at least one uppercase character.{'\\n''}\");\n            }\n            if(!this.state.password.match(/[£!#€$%^&*]/))\n            {\n                errorMessages.push(\"Password must contain at least one of the characters £!#€$%^&*\");\n            }           \n            passwordErrorMessage = <div className=\"error\"><ul>{errorMessages.map(errorMessage => <li key={errorMessage}> {errorMessage} </li>)}</ul></div>;                    \n        }      \n        \n        if(!this.validateConfirmPassword())\n        {\n            confirmPasswordErrorMessage = <div className=\"error\">Passwords must match<br/></div>;        \n        }\n\n            \n        return (\n            <form className=\"form-container\" noValidate = {true} autoComplete={false} id = \"loginForm\" onSubmit = {this.handleSubmit}>\n           \n                {this.state.isRegistered ? <Redirect to=\"/DisplayAllCars\"/> : null} \n            \n                <h2>New User Registration</h2>\n            \n                <div id=\"nameContainer\">\n                    <input  \n                        name = \"name\"              \n                        type = \"text\"\n                        placeholder = \"Name\"\n                        value = {this.state.name}\n                        onChange = {this.handleChange}\n                        ref = {(input) => { this.inputToFocus = input }} \n                    />\n\t           <span className={!this.validateName() ?\"\" : \"showCorrectTick\"}>{checkMark}</span>\n\t\t</div>\n                {nameErrorMessage}\n            \n                <div id=\"emailContainer\">\n\t            <input  \n                        name = \"email\"              \n                        type = \"email\"\n                        placeholder = \"Email\"\n                        value = {this.state.email}\n                        onChange = {this.handleChange}\n                    />\n\t\t    <span className={!this.validateEmail() ?\"\" : \"showCorrectTick\"}>{checkMark}</span>\n\t\t</div>\n               {emailErrorMessage}\n               \n                <div id=\"passwordContainer\">\n\t            <input  \n                        name = \"password\"           \n                        type = \"password\"\n                        placeholder = \"Password\"\n                        title = \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\n                        value = {this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                    <span className={!this.validatePassword() ?\"\" : \"showCorrectTick\"}>{checkMark}</span>\n                </div>\n                {passwordErrorMessage}\n            \n                <div id=\"passwordContainer\">\n                    <input          \n                        name = \"confirmPassword\"    \n                        type = \"password\"\n                        placeholder = \"Confirm password\"\n                        value = {this.state.confirmPassword}\n                        onChange = {this.handleChange}\n                    />\n                    <span className={!this.validateConfirmPassword() ?\"\" : \"showCorrectTick\"}>{checkMark}</span>\n                </div>\n                {confirmPasswordErrorMessage}\n            \n                <input \n                    type = \"submit\" \n                    value = \"Register\" \n                    disabled = {!inputsAreAllValid}\n                />\n            \n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>   \n                \n                <br/><br/><br/><br/><br/>\n                <p>\"Reset User Database\" is only for testing purposes.<br/>All code on the client-side and server-side relating to resetting the database should be removed from any development release</p>\n                <LinkInClass value=\"Reset User Database\" className=\"red-button\" onClick={this.resetUserCollection}/> <br/><br/>\n                <p>Reset the database and set up an administrator with:<br/> * email <strong>admin@admin.com</strong><br/> * password <strong>123!\"£qweQWE</strong></p>        \n          </form>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}