{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars_env\\\\client\\\\src\\\\components\\\\EditCar.js\";\nimport React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport { Redirect, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport LinkInClass from \"../components/LinkInClass\";\nimport { ACCESS_LEVEL_NORMAL_USER } from \"../constants\";\nexport default class EditCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const carObject = {\n        model: this.state.model,\n        colour: this.state.colour,\n        year: this.state.year,\n        price: this.state.price\n      };\n      axios.defaults.withCredentials = true; // needed for sessions to work\n\n      axios.put(\"\".concat(SERVER_HOST, \"/cars/update_car/\").concat(this.props.match.params.id), carObject).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            console.log(\"Record updated\");\n            this.setState({\n              redirectToDisplayAllCars: true\n            });\n          }\n        } else {\n          console.log(\"Record not updated\");\n        }\n      });\n    };\n\n    this.state = {\n      model: '',\n      colour: '',\n      year: '',\n      price: '',\n      redirectToDisplayAllCars: sessionStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER\n    };\n  }\n\n  componentDidMount() {\n    this.inputToFocus.focus();\n    axios.defaults.withCredentials = true; // needed for sessions to work\n\n    axios.get(\"\".concat(SERVER_HOST, \"/cars/get_car/\").concat(this.props.match.params.id)).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          this.setState({\n            model: res.data.model,\n            colour: res.data.colour,\n            year: res.data.year,\n            price: res.data.price\n          });\n        }\n      } else {\n        console.log(\"Record not found\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.redirectToDisplayAllCars ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }) : null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Model\"), React.createElement(Form.Control, {\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      type: \"text\",\n      name: \"model\",\n      value: this.state.model,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"colour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Colour\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"colour\",\n      value: this.state.colour,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Year\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Price\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"price\",\n      value: this.state.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(LinkInClass, {\n      value: \"Update\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\cars_env\\client\\src\\components\\EditCar.js"],"names":["React","Component","Form","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_NORMAL_USER","EditCar","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","carObject","model","state","colour","year","price","defaults","withCredentials","put","SERVER_HOST","match","params","id","then","res","data","errorMessage","console","log","redirectToDisplayAllCars","sessionStorage","accessLevel","componentDidMount","inputToFocus","focus","get","render","input"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport Form from 'react-bootstrap/Form'\nimport {Redirect, Link} from 'react-router-dom'\nimport axios from 'axios'\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {ACCESS_LEVEL_NORMAL_USER} from \"../constants\"\n\nexport default class EditCar extends Component \n{\n    constructor(props) \n    {\n        super(props)\n\n        this.state = {\n            model: '',\n            colour: '',\n            year: '',\n            price: '',\n            redirectToDisplayAllCars:sessionStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER\n        }\n    }\n\n    componentDidMount() \n    {      \n        this.inputToFocus.focus()\n  \n        axios.defaults.withCredentials = true // needed for sessions to work\n        axios.get(`${SERVER_HOST}/cars/get_car/${this.props.match.params.id}`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                { \n                    this.setState({\n                        model: res.data.model,\n                        colour: res.data.colour,\n                        year: res.data.year,\n                        price: res.data.price\n                    })\n                }\n            }\n            else\n            {\n                console.log(`Record not found`)\n            }\n        })\n    }\n\n\n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        const carObject = {\n            model: this.state.model,\n            colour: this.state.colour,\n            year: this.state.year,\n            price: this.state.price\n        }\n\n        axios.defaults.withCredentials = true // needed for sessions to work\n        axios.put(`${SERVER_HOST}/cars/update_car/${this.props.match.params.id}`, carObject)\n         .then(res => \n        {             \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                {      \n                    console.log(`Record updated`)\n                    this.setState({redirectToDisplayAllCars:true})\n                }\n            }\n            else\n            {\n                console.log(\"Record not updated\")\n            }\n        })\n    }\n\n\n    render() \n    {\n        return (\n            <div className=\"form-container\">\n    \n              {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}  \n                        \n              <Form onSubmit={this.handleSubmit}>\n                <Form.Group controlId=\"model\">\n                  <Form.Label>Model</Form.Label>\n                  <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"model\" value={this.state.model} onChange={this.handleChange} />\n                </Form.Group>\n\n                <Form.Group controlId=\"colour\">\n                  <Form.Label>Colour</Form.Label>\n                  <Form.Control type=\"text\" name=\"colour\" value={this.state.colour} onChange={this.handleChange} />\n                </Form.Group>\n\n                <Form.Group controlId=\"year\">\n                  <Form.Label>Year</Form.Label>\n                  <Form.Control type=\"text\" name=\"year\" value={this.state.year} onChange={this.handleChange} />\n                </Form.Group>\n        \n                <Form.Group controlId=\"price\">\n                  <Form.Label>Price</Form.Label>\n                  <Form.Control type=\"text\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\n                </Form.Group>\n  \n                <LinkInClass value=\"Update\" className=\"green-button\" onClick={this.handleSubmit}/>  \n    \n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>\n                   Cancel\n                </Link>\n              </Form>\n            </div>\n           )\n        }\n    }"]},"metadata":{},"sourceType":"module"}