{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars_session\\\\client\\\\src\\\\components\\\\ButtonAsLink.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nconst ButtonAsLink = ({\n  history,\n  to,\n  onClick\n}) => React.createElement(Button, {\n  onClick: event => {\n    onClick(event);\n    history.push(to);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n});\n\nButtonAsLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  onClick: PropTypes.func\n};\nButtonAsLink.defaultProps = {\n  onClick: () => {}\n};\nexport default withRouter(ButtonAsLink);","map":{"version":3,"sources":["C:\\nodejs_projects\\cars_session\\client\\src\\components\\ButtonAsLink.js"],"names":["React","PropTypes","withRouter","ButtonAsLink","history","to","onClick","event","push","propTypes","string","isRequired","children","node","shape","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,EAAX;AAAeC,EAAAA;AAAf,CAAD,KACjB,oBAAC,MAAD;AAEI,EAAA,OAAO,EAAGC,KAAD,IAAW;AAChBD,IAAAA,OAAO,CAACC,KAAD,CAAP;AACAH,IAAAA,OAAO,CAACI,IAAR,CAAaH,EAAb;AACH,GALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ;;AAUAF,YAAY,CAACM,SAAb,GAAyB;AACrBJ,EAAAA,EAAE,EAAEJ,SAAS,CAACS,MAAV,CAAiBC,UADA;AAErBC,EAAAA,QAAQ,EAAEX,SAAS,CAACY,IAAV,CAAeF,UAFJ;AAGrBP,EAAAA,OAAO,EAAEH,SAAS,CAACa,KAAV,CAAgB;AACrBN,IAAAA,IAAI,EAAEP,SAAS,CAACc,IAAV,CAAeJ;AADA,GAAhB,EAENA,UALkB;AAMrBL,EAAAA,OAAO,EAAEL,SAAS,CAACc;AANE,CAAzB;AAQAZ,YAAY,CAACa,YAAb,GAA4B;AACxBV,EAAAA,OAAO,EAAE,MAAM,CAAE;AADO,CAA5B;AAGA,eAAeJ,UAAU,CAACC,YAAD,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nconst ButtonAsLink = ({ history, to, onClick}) => (\n    <Button\n        \n        onClick={(event) => {\n            onClick(event);\n            history.push(to)\n        }}\n    />\n);\n\nButtonAsLink.propTypes = {\n    to: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired\n    }).isRequired,\n    onClick: PropTypes.func\n};\nButtonAsLink.defaultProps = {\n    onClick: () => {}\n};\nexport default withRouter(ButtonAsLink);"]},"metadata":{},"sourceType":"module"}