{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars\\\\mongodb_with_validation\\\\client\\\\src\\\\components\\\\EditCar.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class EditCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        wasSubmittedAtLeastOnce: true\n      });\n      const formInputsState = this.validate(); //    if (Object.keys(formInputsState).every(index => formInputsState[index])) \n\n      {\n        const carObject = {\n          model: this.state.model,\n          colour: this.state.colour,\n          year: this.state.year,\n          price: this.state.price\n        };\n        axios.defaults.withCredentials = true; // needed for sessions to work\n\n        axios.put(\"\".concat(SERVER_HOST, \"/cars/update_car/\").concat(this.props.match.params.id), carObject).then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              console.log(res.data.errorMessage);\n            } else {\n              console.log(\"Record updated\");\n              this.setState({\n                redirectToDisplayAllCars: true\n              });\n            }\n          } else {\n            console.log(\"Record not updated\");\n          }\n        });\n      }\n    };\n\n    this.state = {\n      model: \"\",\n      colour: \"\",\n      year: \"\",\n      price: \"\",\n      redirectToDisplayAllCars: false\n    };\n  }\n\n  componentDidMount() {\n    this.inputToFocus.focus();\n    axios.defaults.withCredentials = true; // needed for sessions to work\n\n    axios.get(\"\".concat(SERVER_HOST, \"/cars/get_car/\").concat(this.props.match.params.id)).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          this.setState({\n            model: res.data.model,\n            colour: res.data.colour,\n            year: res.data.year,\n            price: res.data.price\n          });\n        }\n      } else {\n        console.log(\"Record not found\");\n      }\n    });\n  }\n\n  validateModel() {\n    const pattern = /^[A-Za-z]+$/;\n    return pattern.test(String(this.state.model));\n  }\n\n  validateColour() {\n    const pattern = /^[A-Za-z]+$/;\n    return pattern.test(String(this.state.colour));\n  }\n\n  validateYear() {\n    const year = parseInt(this.state.year);\n    const today = new Date();\n    return year >= 1990 && year <= today.getFullYear();\n  }\n\n  validatePrice() {\n    const price = parseInt(this.state.price);\n    return price >= 1000 && price <= 100000;\n  }\n\n  validate() {\n    return {\n      model: this.validateModel(),\n      colour: this.validateColour(),\n      year: this.validateYear(),\n      price: this.validatePrice()\n    };\n  }\n\n  render() {\n    let errorMessage = \"\";\n\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Car Details are incorrect\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.redirectToDisplayAllCars ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }) : null, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, errorMessage, React.createElement(Form.Group, {\n      controlId: \"model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Model\"), React.createElement(Form.Control, {\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      type: \"text\",\n      name: \"model\",\n      value: this.state.model,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"colour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Colour\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"colour\",\n      value: this.state.colour,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Year\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Price\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"price\",\n      value: this.state.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(LinkInClass, {\n      value: \"Update\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\cars\\mongodb_with_validation\\client\\src\\components\\EditCar.js"],"names":["React","Component","Form","Redirect","Link","axios","LinkInClass","SERVER_HOST","EditCar","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","wasSubmittedAtLeastOnce","formInputsState","validate","carObject","model","state","colour","year","price","defaults","withCredentials","put","match","params","id","then","res","data","errorMessage","console","log","redirectToDisplayAllCars","componentDidMount","inputToFocus","focus","get","validateModel","pattern","test","String","validateColour","validateYear","parseInt","today","Date","getFullYear","validatePrice","render","input"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {SERVER_HOST} from \"../config/global_constants\"\n\nexport default class EditCar extends Component \n{\n    constructor(props) \n    {\n        super(props)\n\n        this.state = {\n            model: ``,\n            colour: ``,\n            year: ``,\n            price: ``,\n            redirectToDisplayAllCars:false\n        }\n    }\n\n    componentDidMount() \n    {      \n        this.inputToFocus.focus()\n  \n        axios.defaults.withCredentials = true // needed for sessions to work\n        axios.get(`${SERVER_HOST}/cars/get_car/${this.props.match.params.id}`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else\n                { \n                    this.setState({\n                        model: res.data.model,\n                        colour: res.data.colour,\n                        year: res.data.year,\n                        price: res.data.price\n                    })\n                }\n            }\n            else\n            {\n                console.log(`Record not found`)\n            }\n        })\n    }\n\n\n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        this.setState({ wasSubmittedAtLeastOnce: true });\n\n        const formInputsState = this.validate();\n        \n    //    if (Object.keys(formInputsState).every(index => formInputsState[index])) \n        {\n            const carObject = {\n                model: this.state.model,\n                colour: this.state.colour,\n                year: this.state.year,\n                price: this.state.price\n            }\n\n            axios.defaults.withCredentials = true // needed for sessions to work\n            axios.put(`${SERVER_HOST}/cars/update_car/${this.props.match.params.id}`, carObject)\n            .then(res => \n            {             \n                if(res.data)\n                {\n                    if (res.data.errorMessage)\n                    {\n                        console.log(res.data.errorMessage)    \n                    }\n                    else\n                    {      \n                        console.log(`Record updated`)\n                        this.setState({redirectToDisplayAllCars:true})\n                    }\n                }\n                else\n                {\n                    console.log(`Record not updated`)\n                }\n            })\n        }\n    }\n\n\n    validateModel()\n    {    \n        const pattern = /^[A-Za-z]+$/;\n        return pattern.test(String(this.state.model))\n    }\n    \n    \n    validateColour()\n    {    \n        const pattern = /^[A-Za-z]+$/;\n        return pattern.test(String(this.state.colour))\n    }\n    \n    \n    validateYear()\n    {    \n        const year = parseInt(this.state.year)\n        const today = new Date()   \n        return (year >= 1990 && year <= today.getFullYear())\n    }\n\n\n    validatePrice()\n    {    \n        const price = parseInt(this.state.price)\n        return (price >= 1000 && price <= 100000)\n    }\n\n\n    validate() \n    {\n        return {\n            model: this.validateModel(),\n            colour: this.validateColour(),\n            year: this.validateYear(),\n            price: this.validatePrice()\n        };\n    }\n    \n    \n    render() \n    {\n        let errorMessage = \"\";\n        if(this.state.wasSubmittedAtLeastOnce)\n        {\n            errorMessage = <div className=\"error\">Car Details are incorrect<br/></div>;\n        }  \n        return (\n            <div className=\"form-container\">\n    \n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}  \n                        \n                <Form onSubmit={this.handleSubmit}>\n                \n                    {errorMessage}\n                \n                    <Form.Group controlId=\"model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"model\" value={this.state.model} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"colour\">\n                        <Form.Label>Colour</Form.Label>\n                        <Form.Control type=\"text\" name=\"colour\" value={this.state.colour} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"year\">\n                        <Form.Label>Year</Form.Label>\n                        <Form.Control type=\"text\" name=\"year\" value={this.state.year} onChange={this.handleChange} />\n                    </Form.Group>\n        \n                    <Form.Group controlId=\"price\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control type=\"text\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\n                    </Form.Group>\n  \n                    <LinkInClass value=\"Update\" className=\"green-button\" onClick={this.handleSubmit}/>  \n    \n                    <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\n                </Form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}