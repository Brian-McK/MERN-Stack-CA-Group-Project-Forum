{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars_env_full\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      axios.defaults.withCredentials = true; // needed for sessions to work\n\n      axios.post(\"\".concat(SERVER_HOST, \"/users/register/\").concat(this.state.name, \"/\").concat(this.state.email, \"/\").concat(this.state.password)).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else // user successfully registered\n            {\n              console.log(\"User registered and logged in\");\n              sessionStorage.isLoggedIn = \"true\";\n              sessionStorage.name = res.data.name;\n              sessionStorage.accessLevel = res.data.accessLevel;\n              this.setState({\n                isRegistered: true\n              });\n            }\n        } else {\n          console.log(\"Registration failed\");\n        }\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      isRegistered: false\n    };\n  }\n\n  validateName() {\n    // valid name pattern\n    return this.state.name.length > 1;\n  }\n\n  validateEmail() {\n    // valid email pattern\n    const pattern = /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; //eslint-disable-line\n\n    return pattern.test(String(this.state.email).toLowerCase());\n  }\n\n  validatePassword() {\n    const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/; //eslint-disable-line\n\n    return pattern.test(String(this.state.password));\n  }\n\n  validateConfirmPassword() {\n    return this.state.confirmPassword.length > 0 && this.state.password === this.state.confirmPassword;\n  }\n\n  validate() {\n    return {\n      name: this.validateName(),\n      email: this.validateEmail(),\n      password: this.validatePassword(),\n      confirmPassword: this.validateConfirmPassword()\n    };\n  }\n\n  render() {\n    const checkMark = \"✔\";\n    const formInputsState = this.validate();\n    const inputsAreAllValid = Object.keys(formInputsState).every(index => formInputsState[index]);\n    let nameErrorMessage = \"\";\n    let emailErrorMessage = \"\";\n    let passwordErrorMessage = \"\";\n    let confirmPasswordErrorMessage = \"\";\n\n    if (!this.validateName()) {\n      nameErrorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Name must be at least two characters long\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }));\n    }\n\n    if (!this.validateEmail()) {\n      emailErrorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Enter a valid email\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    }\n\n    if (!this.validatePassword()) {\n      let errorMessages = [];\n\n      if (this.state.password.length < 10) {\n        errorMessages.push(\"Password must be at least ten characters long.\");\n      }\n\n      if (!this.state.password.match(/[0-9]/)) {\n        errorMessages.push(\"Password must contain at least one digit (0-9).\");\n      }\n\n      if (!this.state.password.match(/[a-z]/)) {\n        errorMessages.push(\"Password must contain at least one lowercase character.\");\n      }\n\n      if (!this.state.password.match(/[A-Z]/)) {\n        errorMessages.push(\"Password must contain at least one uppercase character.{'\\n''}\");\n      }\n\n      if (!this.state.password.match(/[£!#€$%^&*]/)) {\n        errorMessages.push(\"Password must contain at least one of the characters £!#€$%^&*\");\n      }\n\n      passwordErrorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, errorMessages.map(errorMessage => React.createElement(\"li\", {\n        key: errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \" \", errorMessage, \" \"))));\n    }\n\n    if (!this.validateConfirmPassword()) {\n      confirmPasswordErrorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Passwords must match\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"form\", {\n      className: \"form-container\",\n      noValidate: true,\n      id: \"loginForm\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.isRegistered ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }) : null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"New User Registration\"), React.createElement(\"div\", {\n      id: \"nameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      autoComplete: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validateName() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, checkMark)), nameErrorMessage, React.createElement(\"div\", {\n      id: \"emailContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validateEmail() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, checkMark)), emailErrorMessage, React.createElement(\"div\", {\n      id: \"passwordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"password\",\n      title: \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (\\xA3!#\\u20AC$%^&*)\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validatePassword() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, checkMark)), passwordErrorMessage, React.createElement(\"div\", {\n      id: \"passwordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm password\",\n      autoComplete: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validateConfirmPassword() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, checkMark)), confirmPasswordErrorMessage, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Register\",\n      disabled: !inputsAreAllValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\cars_env_full\\client\\src\\components\\Register.js"],"names":["React","Component","Redirect","Link","axios","SERVER_HOST","Register","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","defaults","withCredentials","post","state","email","password","then","res","data","errorMessage","console","log","sessionStorage","isLoggedIn","accessLevel","isRegistered","confirmPassword","validateName","length","validateEmail","pattern","test","String","toLowerCase","validatePassword","validateConfirmPassword","validate","render","checkMark","formInputsState","inputsAreAllValid","Object","keys","every","index","nameErrorMessage","emailErrorMessage","passwordErrorMessage","confirmPasswordErrorMessage","errorMessages","push","match","map","input","inputToFocus"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport {SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class Register extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            name:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",    \n            isRegistered:false\n        } \n    }\n    \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        axios.defaults.withCredentials = true // needed for sessions to work\n        axios.post(`${SERVER_HOST}/users/register/${this.state.name}/${this.state.email}/${this.state.password}`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully registered\n                { \n                    console.log(\"User registered and logged in\")\n                    \n                    sessionStorage.isLoggedIn = \"true\"\n                    sessionStorage.name = res.data.name\n                    sessionStorage.accessLevel = res.data.accessLevel\n                    \n                    this.setState({isRegistered:true})\n                }        \n            }\n            else\n            {\n                console.log(\"Registration failed\")\n            }\n        })   \n    }\n\n\n    validateName()\n    {    \n        // valid name pattern\n        return (this.state.name.length > 1)\n    }\n    \n    \n    validateEmail()\n    {    \n        // valid email pattern\n        const pattern = /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/  //eslint-disable-line\n        return pattern.test(String(this.state.email).toLowerCase())\n    }\n\n\n    validatePassword()\n    {    \n        const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/   //eslint-disable-line\n        return pattern.test(String(this.state.password)) \n    }\n\n\n    validateConfirmPassword()\n    {    \n        return ((this.state.confirmPassword.length > 0) && (this.state.password === this.state.confirmPassword)) \n    }\n\n\n    validate() \n    {\n        return {\n            name: this.validateName(),\n            email: this.validateEmail(),\n            password: this.validatePassword(),\n            confirmPassword: this.validateConfirmPassword()\n        }\n    }\n\n\n    render() \n    {\n        \n        const checkMark = \"✔\"\n        const formInputsState = this.validate()\n        const inputsAreAllValid = Object.keys(formInputsState).every(index => formInputsState[index])          \n            \n        let nameErrorMessage = \"\";\n        let emailErrorMessage = \"\";\n        let passwordErrorMessage = \"\";\n        let confirmPasswordErrorMessage = \"\";\n\n        if(!this.validateName())\n        {\n            nameErrorMessage = <div className=\"error\">Name must be at least two characters long<br/></div>;\n        }\n        \n        if(!this.validateEmail())\n        {\n            emailErrorMessage = <div className=\"error\">Enter a valid email<br/></div>;\n        }\n        \n        if(!this.validatePassword())\n        {\n            let errorMessages = [];\n            if(this.state.password.length < 10)\n            {\n                errorMessages.push(\"Password must be at least ten characters long.\");\n            } \n            if(!this.state.password.match(/[0-9]/))\n            {\n                errorMessages.push(\"Password must contain at least one digit (0-9).\");\n            }\n            if(!this.state.password.match(/[a-z]/))\n            {\n                errorMessages.push(\"Password must contain at least one lowercase character.\");\n            }\n            if(!this.state.password.match(/[A-Z]/))\n            {\n                errorMessages.push(\"Password must contain at least one uppercase character.{'\\n''}\");\n            }\n            if(!this.state.password.match(/[£!#€$%^&*]/))\n            {\n                errorMessages.push(\"Password must contain at least one of the characters £!#€$%^&*\");\n            }           \n            passwordErrorMessage = <div className=\"error\"><ul>{errorMessages.map(errorMessage => <li key={errorMessage}> {errorMessage} </li>)}</ul></div>;                    \n        }      \n        \n        if(!this.validateConfirmPassword())\n        {\n            confirmPasswordErrorMessage = <div className=\"error\">Passwords must match<br/></div>;        \n        }\n\n            \n        return (\n            <form className=\"form-container\" noValidate = {true} id = \"loginForm\" onSubmit = {this.handleSubmit}>\n           \n                {this.state.isRegistered ? <Redirect to=\"/DisplayAllCars\"/> : null} \n            \n                <h2>New User Registration</h2>\n            \n                <div id=\"nameContainer\">\n                    <input  \n                        name = \"name\"              \n                        type = \"text\"\n                        placeholder = \"Name\"\n                        autoComplete=\"name\"\n                        value = {this.state.name}\n                        onChange = {this.handleChange}\n                        ref = {(input) => { this.inputToFocus = input }} \n                    />\n\t           <span className={!this.validateName() ?\"\" : \"showCorrectTick\"}>{checkMark}</span>\n\t\t</div>\n                {nameErrorMessage}\n            \n                <div id=\"emailContainer\">\n\t            <input  \n                        name = \"email\"              \n                        type = \"email\"\n                        placeholder = \"Email\"\n                        autoComplete=\"email\"\n                        value = {this.state.email}\n                        onChange = {this.handleChange}\n                    />\n\t\t    <span className={!this.validateEmail() ?\"\" : \"showCorrectTick\"}>{checkMark}</span>\n\t\t</div>\n               {emailErrorMessage}\n               \n                <div id=\"passwordContainer\">\n\t            <input  \n                        name = \"password\"           \n                        type = \"password\"\n                        placeholder = \"Password\"\n                        autoComplete=\"password\"\n                        title = \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\n                        value = {this.state.password}\n                        onChange = {this.handleChange}\n                    />\n                    <span className={!this.validatePassword() ?\"\" : \"showCorrectTick\"}>{checkMark}</span>\n                </div>\n                {passwordErrorMessage}\n            \n                <div id=\"passwordContainer\">\n                    <input          \n                        name = \"confirmPassword\"    \n                        type = \"password\"\n                        placeholder = \"Confirm password\"\n                        autoComplete=\"confirmPassword\"\n                        value = {this.state.confirmPassword}\n                        onChange = {this.handleChange}\n                    />\n                    <span className={!this.validateConfirmPassword() ?\"\" : \"showCorrectTick\"}>{checkMark}</span>\n                </div>\n                {confirmPasswordErrorMessage}\n                          \n                <input \n                    type = \"submit\" \n                    value = \"Register\" \n                    disabled = {!inputsAreAllValid}\n                />\n                \n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>   \n            </form>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}