{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars_server_session\\\\client\\\\src\\\\components\\\\DisplayAllCars.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport CarTable from './CarTable';\nimport Login from './Login';\nimport Logout from './Logout';\nexport default class DisplayAllCars extends Component {\n  constructor(props) {\n    super(props);\n\n    this.readDataFromDB = () => {\n      axios.defaults.withCredentials = true; // needed for sessions to work\n\n      axios.get('http://localhost:4000/cars/').then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            console.log(\"Records read\");\n            this.setState({\n              cars: res.data\n            });\n          }\n        } else {\n          console.log(\"Record not found\");\n        }\n      });\n    };\n\n    this.state = {\n      cars: []\n    };\n    this.readDataFromDB();\n  }\n\n  componentDidUpdate() {\n    if (this.state.cars.length < 1) {\n      axios.defaults.withCredentials = true; // needed for sessions to work\n\n      axios.get('http://localhost:4000/cars/').then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            console.log(\"Records read\");\n            this.setState({\n              cars: res.data\n            });\n          }\n        } else {\n          console.log(\"Record not found\");\n        }\n      });\n    }\n  }\n\n  render() {\n    let content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Logout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(CarTable, {\n      cars: this.state.cars,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-new-car\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"blue-button\",\n      to: \"/AddCar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Add New Car\"))));\n\n    if (sessionStorage.isLoggedIn === \"false\") {\n      content = React.createElement(\"div\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Access Denied\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, content);\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\cars_server_session\\client\\src\\components\\DisplayAllCars.js"],"names":["React","Component","Link","axios","CarTable","Login","Logout","DisplayAllCars","constructor","props","readDataFromDB","defaults","withCredentials","get","then","res","data","errorMessage","console","log","setState","cars","state","componentDidUpdate","length","render","content","sessionStorage","isLoggedIn"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\n\nimport CarTable from './CarTable'\nimport Login from './Login'\nimport Logout from './Logout'\n\n\nexport default class DisplayAllCars extends Component \n{\n    constructor(props) \n    {\n        super(props)\n        this.state = {\n            cars: []\n        }\n\n\n        this.readDataFromDB()\n        \n       \n    }\n    \n    \n     readDataFromDB = () =>\n        {\n            axios.defaults.withCredentials = true; // needed for sessions to work\n            axios.get('http://localhost:4000/cars/')\n            .then(res => \n            {\n                if(res.data)\n                {\n                    if (res.data.errorMessage)\n                    {\n                        console.log(res.data.errorMessage)    \n                    }\n                    else\n                    {           \n                        console.log(`Records read`)   \n                        this.setState({cars: res.data}) \n                    }   \n                }\n                else\n                {\n                    console.log(`Record not found`)\n                }\n            })\n        }\n    \n    \n    componentDidUpdate() \n    {  \n        if(this.state.cars.length < 1)\n        {\n            axios.defaults.withCredentials = true; // needed for sessions to work\n            axios.get('http://localhost:4000/cars/')\n            .then(res => \n            {\n                if(res.data)\n                {\n                    if (res.data.errorMessage)\n                    {\n                        console.log(res.data.errorMessage)    \n                    }\n                    else\n                    {           \n                        console.log(`Records read`)   \n                        this.setState({cars: res.data}) \n                    }   \n                }\n                else\n                {\n                    console.log(`Record not found`)\n                }\n            })\n        }\n    }\n\n  \n    render() \n    {  \n        let content = <div>\n                        <div className=\"logout\">\n                          <Logout/>\n                        </div>\n                        <div className=\"table-container\">\n                          <CarTable cars={this.state.cars} /> \n                          <div className=\"add-new-car\">\n                            <Link className=\"blue-button\" to={\"/AddCar\"}>Add New Car</Link>\n                          </div>\n                        </div>\n                      </div>\n                          \n        if(sessionStorage.isLoggedIn === \"false\")\n        {\n            content = <div className=\"table-container\">\n                        <h1>Access Denied</h1>\n                        <div>\n                          <Login/>\n                        </div>\n                       </div>\n        }\n        \n        return (           \n                 <div>\n                   {content}\n                 </div>\n               )\n    }\n}"]},"metadata":{},"sourceType":"module"}