{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars_env_full\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      axios.defaults.withCredentials = true; // needed for sessions to work\n\n      axios.post(\"\".concat(SERVER_HOST, \"/users/register/\").concat(this.state.name, \"/\").concat(this.state.email, \"/\").concat(this.state.password, \"/\").concat(this.state.accessLevel)).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else // user successfully registered\n            {\n              console.log(\"User registered and logged in\");\n              sessionStorage.isLoggedIn = \"true\";\n              sessionStorage.name = res.data.name;\n              sessionStorage.accessLevel = res.data.accessLevel;\n              this.setState({\n                isRegistered: true\n              });\n            }\n        } else {\n          console.log(\"Registration failed\");\n        }\n      });\n    };\n\n    this.resetUserCollection = () => {\n      axios.defaults.withCredentials = true; // needed for sessions to work\n\n      axios.post(\"\".concat(SERVER_HOST, \"/users/reset_user_collection\")).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else // user successfully reset the User collection\n            {\n              console.log(\"User collection reset\");\n            }\n        } else {\n          console.log(\"Failed to reset User collection\");\n        }\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      accessLevel: ACCESS_LEVEL_NORMAL_USER,\n      isRegistered: false\n    };\n    console.log(1);\n  }\n\n  validateName() {\n    // valid name pattern\n    return this.state.name.length > 0;\n  }\n\n  validateEmail() {\n    // valid email pattern\n    const pattern = /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return pattern.test(String(this.state.email).toLowerCase());\n  }\n\n  validatePassword() {\n    const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\n    return pattern.test(String(this.state.password));\n  }\n\n  validateConfirmPassword() {\n    return this.state.confirmPassword.length > 0 && this.state.password === this.state.confirmPassword;\n  }\n\n  validate() {\n    const name = this.state.name;\n    const email = this.state.email;\n    const password = this.state.password;\n    return {\n      name: this.validateName(),\n      email: this.validateEmail(),\n      password: this.validatePassword(),\n      confirmPassword: this.validateConfirmPassword()\n    };\n  }\n\n  render() {\n    const formInputsState = this.validate();\n    const inputsAreAllValid = Object.keys(formInputsState).every(index => formInputsState[index]);\n    return React.createElement(\"form\", {\n      className: \"form-container\",\n      noValidate: true,\n      id: \"loginForm\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.isRegistered ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      id: \"nameContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validateName() ? null : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"&#10004\")), React.createElement(\"div\", {\n      id: \"emailContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validateEmail() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"&#10004\")), React.createElement(\"div\", {\n      id: \"passwordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      title: \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (\\xA3!#\\u20AC$%^&*)\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validatePassword() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"&#10004\")), React.createElement(\"div\", {\n      id: \"passwordContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: !this.validateConfirmPassword() ? \"\" : \"showCorrectTick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"&#10004\")), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Register\",\n      disabled: !inputsAreAllValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"\\\"Reset User Database\\\" is only for testing purposes.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), \"All code on the client-side and server-side relating to resetting the database should be removed from any development release\"), React.createElement(LinkInClass, {\n      value: \"Reset User Database\",\n      className: \"red-button\",\n      onClick: this.resetUserCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Reset the database and set up an administrator with:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), \" * email \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"\\\"admin@admin.com\\\"\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), \" * password \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"\\\"admin\\\"\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\cars_env_full\\client\\src\\components\\Register.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","Register","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","defaults","withCredentials","post","state","email","password","accessLevel","then","res","data","errorMessage","console","log","sessionStorage","isLoggedIn","isRegistered","resetUserCollection","confirmPassword","validateName","length","validateEmail","pattern","test","String","toLowerCase","validatePassword","validateConfirmPassword","validate","render","formInputsState","inputsAreAllValid","Object","keys","every","index","input","inputToFocus"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\nimport {ACCESS_LEVEL_NORMAL_USER, SERVER_HOST} from \"../config/global_constants\"\n\n\nexport default class Register extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        \n        this.state = {\n            name:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",\n            accessLevel:ACCESS_LEVEL_NORMAL_USER,     \n            isRegistered:false\n        } \n        \n        console.log(1)\n    }\n    \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        axios.defaults.withCredentials = true // needed for sessions to work\n        axios.post(`${SERVER_HOST}/users/register/${this.state.name}/${this.state.email}/${this.state.password}/${this.state.accessLevel}`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully registered\n                { \n                    console.log(\"User registered and logged in\")\n                    \n                    sessionStorage.isLoggedIn = \"true\"\n                    sessionStorage.name = res.data.name\n                    sessionStorage.accessLevel = res.data.accessLevel\n                    \n                    this.setState({isRegistered:true})\n                }        \n            }\n            else\n            {\n                console.log(\"Registration failed\")\n            }\n        })   \n    }\n    \n    \n    resetUserCollection = () =>\n    {\n        axios.defaults.withCredentials = true // needed for sessions to work\n        axios.post(`${SERVER_HOST}/users/reset_user_collection`)\n        .then(res => \n        {     \n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully reset the User collection\n                { \n                    console.log(\"User collection reset\")\n                }        \n            }\n            else\n            {\n                console.log(\"Failed to reset User collection\")\n            }\n        })   \n    }\n\n\n    validateName()\n    {    \n        // valid name pattern\n        return (this.state.name.length > 0)\n    }\n    \n    \n    validateEmail()\n    {    \n        // valid email pattern\n        const pattern = /^(([^<>()\\[\\]\\\\.,:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        return pattern.test(String(this.state.email).toLowerCase())\n    }\n\n\n    validatePassword()\n    {    \n        const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/\n        return pattern.test(String(this.state.password)) \n    }\n\n\n    validateConfirmPassword()\n    {    \n        return ((this.state.confirmPassword.length > 0) && (this.state.password === this.state.confirmPassword)) \n    }\n\n\n    validate() \n    {\n        const name = this.state.name\n        const email = this.state.email\n        const password = this.state.password\n        return {\n            name: this.validateName(),\n            email: this.validateEmail(),\n            password: this.validatePassword(),\n            confirmPassword: this.validateConfirmPassword()\n        }\n    }\n\n\n    render() \n    {\n        const formInputsState = this.validate()\n        const inputsAreAllValid = Object.keys(formInputsState).every(index => formInputsState[index])          \n            \n        return (\n          <form className=\"form-container\" noValidate = {true} id = \"loginForm\" onSubmit = {this.handleSubmit}>\n           \n            {this.state.isRegistered ? <Redirect to=\"/DisplayAllCars\"/> : null} \n            \n            <div id=\"nameContainer\">\n                <input  \n                    name = \"name\"              \n                  type = \"text\"\n                  placeholder = \"Name\"\n                  value = {this.state.name}\n                  onChange = {this.handleChange}\n                  ref = {(input) => { this.inputToFocus = input }} \n                />\n\t       <span className={!this.validateName() ?null : \"showCorrectTick\"}>&#10004</span>\n\t\t    </div>\n            \n            \n            <div id=\"emailContainer\">\n\t\t\t    <input  \n\t\t\t      name = \"email\"              \n                  type = \"email\"\n                  placeholder = \"Email\"\n                  value = {this.state.email}\n                  onChange = {this.handleChange}\n                  ref = {(input) => { this.inputToFocus = input }} \n                />\n\t\t\t\t<span className={!this.validateEmail() ?\"\" : \"showCorrectTick\"}>&#10004</span>\n\t\t    </div>\n               \n            <div id=\"passwordContainer\">\n\t\t\t  <input  \n\t\t\t    name = \"password\"           \n                type = \"password\"\n                placeholder = \"Password\"\n                title = \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\n                value = {this.state.password}\n                onChange = {this.handleChange}\n              />\n\t\t\t  <span className={!this.validatePassword() ?\"\" : \"showCorrectTick\"}>&#10004</span>\n\t\t\t</div>\n            \n            <div id=\"passwordContainer\">\n\t\t\t  <input          \n\t\t\t    name = \"confirmPassword\"    \n                type = \"password\"\n                placeholder = \"Confirm password\"\n                value = {this.state.confirmPassword}\n                onChange = {this.handleChange}\n              />\n\t\t\t  <span className={!this.validateConfirmPassword() ?\"\" : \"showCorrectTick\"}>&#10004</span>\n\t\t\t</div>\n            \n            <input \n              type = \"submit\" \n              value = \"Register\" \n              disabled = {!inputsAreAllValid}\n            />\n            \n                \n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>   \n                \n                <br/><br/><br/><br/><br/>\n                <p>\"Reset User Database\" is only for testing purposes.<br/>All code on the client-side and server-side relating to resetting the database should be removed from any development release</p>\n                <LinkInClass value=\"Reset User Database\" className=\"red-button\" onClick={this.resetUserCollection}/> <br/><br/>\n                <p>Reset the database and set up an administrator with:<br/> * email <strong>\"admin@admin.com\"</strong><br/> * password <strong>\"admin\"</strong></p>        \n            \n          </form>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}