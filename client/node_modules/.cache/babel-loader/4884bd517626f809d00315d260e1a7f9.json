{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars_mongodb_multiple\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport LinkInClass from \"../components/LinkInClass\";\nimport { ACCESS_LEVEL_GUEST } from \"../constants\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      axios.defaults.withCredentials = true; // needed for sessions to work\n\n      axios.post(\"http://localhost:4000/users/login/\".concat(this.state.email, \"/\").concat(this.state.password)).then(res => {\n        // default if not logged in\n        sessionStorage.name = \"GUEST\";\n        sessionStorage.accessLevel = ACCESS_LEVEL_GUEST; // guest has accessLevel of 0\n\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else // user successfully logged in\n            {\n              console.log(\"User logged in\");\n              sessionStorage.isLoggedIn = \"true\";\n              sessionStorage.name = res.data.name;\n              sessionStorage.accessLevel = res.data.accessLevel;\n              this.setState({\n                isLoggedIn: true\n              });\n            }\n        } else {\n          console.log(\"Login failed\");\n        }\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      isLoggedIn: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.isLoggedIn ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }) : null, this.state.isRegistered ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }) : null, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(LinkInClass, {\n      value: \"Register\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(LinkInClass, {\n      value: \"Reset User Database\",\n      className: \"red-button\",\n      onClick: this.resetUserCollection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-new-car\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"blue-button\",\n      to: \"/Register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Register\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\cars_mongodb_multiple\\client\\src\\components\\Login.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_GUEST","Login","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","defaults","withCredentials","post","state","email","password","then","res","sessionStorage","accessLevel","data","errorMessage","console","log","isLoggedIn","render","isRegistered","resetUserCollection"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Redirect, Link} from 'react-router-dom'\nimport axios from 'axios'\n\n\nimport LinkInClass from \"../components/LinkInClass\"\nimport {ACCESS_LEVEL_GUEST} from \"../constants\"\n\n\nexport default class Login extends Component\n{\n    constructor(props)\n    {\n        super(props)\n        this.state = ({name:\"\",\n                       email:\"\",\n                       isLoggedIn:false}) \n    }\n    \n    \n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n            \n        axios.defaults.withCredentials = true // needed for sessions to work\n        axios.post(`http://localhost:4000/users/login/${this.state.email}/${this.state.password}`)\n        .then(res => \n        {     \n            // default if not logged in\n            sessionStorage.name = \"GUEST\"\n            sessionStorage.accessLevel = ACCESS_LEVEL_GUEST // guest has accessLevel of 0\n            if(res.data)\n            {\n                if (res.data.errorMessage)\n                {\n                    console.log(res.data.errorMessage)    \n                }\n                else // user successfully logged in\n                { \n                    console.log(\"User logged in\")\n                    \n                    sessionStorage.isLoggedIn = \"true\"\n                    sessionStorage.name = res.data.name\n                    sessionStorage.accessLevel = res.data.accessLevel\n                    \n                    this.setState({isLoggedIn:true})\n                }        \n            }\n            else\n            {\n                console.log(`Login failed`)\n            }\n        })        \n    }\n\n\n    render()\n    {\n        return (\n                <div className=\"form-container\">  \n        \n                {this.state.isLoggedIn ? <Redirect to=\"/DisplayAllCars\"/> : null} \n                  \n        \n                    {this.state.isRegistered ? <Redirect to=\"/DisplayAllCars\"/> : null} \n                  \n             \n                    \n                    <input \n                        type = \"email\" \n                        name = \"email\" \n                        placeholder = \"Email\"\n                        value={this.state.email} \n                        onChange={this.handleChange}\n                    /><br/>\n                    \n                    <input \n                        type = \"text\" \n                        name = \"password\" \n                        placeholder = \"Password\"\n                        value={this.state.password} \n                        onChange={this.handleChange}\n                    /><br/>\n\n                    <LinkInClass value=\"Register\" className=\"green-button\" onClick={this.handleSubmit}/> \n                    <br/><br/><br/><br/><LinkInClass value=\"Reset User Database\" className=\"red-button\" onClick={this.resetUserCollection}/>                  \n               \n\n                    <div className=\"add-new-car\">\n                        <Link className=\"blue-button\" to={\"/Register\"}>Register</Link>\n                    </div>\n                </div>\n               )\n        }\n}"]},"metadata":{},"sourceType":"module"}